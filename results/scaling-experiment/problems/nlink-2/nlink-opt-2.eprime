language ESSENCE' 1.0

given n : int
letting VALS be domain int(1..n)
find seq : matrix indexed by [VALS] of VALS
find active : matrix [VALS] of bool
find len : int(n/2..n)

maximising len

such that

allDiff(seq),

forAll i : int(2..n) . (i <= len) <-> active[i],

forAll i : int(2..n) .
  !active[i] \/ ( (seq[i] % seq[i-1] = 0) \/ (seq[i-1] % seq[i] = 0) ),

forAll i : int(2..n) .
  active[i] -> allDiff([ seq[j] | j:int(i-1..i) ])
